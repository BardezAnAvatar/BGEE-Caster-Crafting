/*********************************************************************
*   This function will output a string/chunk of .D text containing   *
*       the valid/invalid states for potion brewing                  *
*********************************************************************/

DEFINE_ACTION_FUNCTION ~fn-generate_potion_creation_states~
    INT_VAR
        ~cost_gold~ = "-1"
        ~quantity~ = "-1"
        ~cost_hours~ = "-1"
        ~chance_failure~ = "-1"
    STR_VAR
        ~potion_name~ = null
        ~potion_RESREF~ = null
        ~categoryCode~ = null
        ~subcategoryCode~ = null
        ~recipe_UID~ = null
    RET
        ~state_markup~
BEGIN
    //initialize return values
    OUTER_TEXT_SPRINT ~state_markup~ ~~

    /***************************************
    *   Build potion states for formulae   *
    ***************************************/
    OUTER_SPRINT ~prompt~ @30046 // ~You analyze the formula and prepare to brew %potion_name%.~

    //variables needed for dialog action:
    //  %potion_name%, %cost_gold%, %readable_time%; %quantity%

    OUTER_SET ~cost_gold_gt~ = (cost_gold - 1)

    //BEGIN: Calculate times
    OUTER_SET ~cost_time_engine~ = %cost_hours% * 300



    //calculate a friendly time for display on dialog (hours vs. days)
    OUTER_SPRINT ~readable_time~ ~~
    ACTION_IF %cost_hours% < 24 THEN
    BEGIN
        OUTER_SET ~hours~ = %cost_hours%
        OUTER_SPRINT ~readable_time~ @30029 // `%keys_5% hours`
    END //hours
    ELSE    //days
    BEGIN
        OUTER_SET ~days~ = %cost_hours% / 24
        OUTER_SPRINT ~readable_time~ @30028 // `(%keys_5% / 24) days`
    END //days
    //END calculate times



    OUTER_SET ~bz_potion_failure_bounds_cursed~ = (99 - %chance_failure%)     //use this for GT(X)
    OUTER_SET ~bz_potion_failure_bounds_success~ = (100 - %chance_failure%)   //use this for LT(X)

    //build the transition string
    OUTER_SPRINT ~brew_transition_go~ @30026 //~Brew %potion_name% [spend %cost_gold% gold; %readable_time%; yield %quantity% vials]~

    //display to log
    OUTER_SPRINT ~elapsed_message~ @30027 //~%readable_time% have elapsed.~ //i.e.: "2 days have elapsed"
    OUTER_SET ~elapsed_strref~ = RESOLVE_STR_REF(~%elapsed_message%~)

    OUTER_TEXT_SPRINT ~state_prefix_recipe~         ~%categoryCode%-%subcategoryCode%-%potion_RESREF%-%recipe_UID%~
    OUTER_TEXT_SPRINT ~state_prefix_potion~         ~%categoryCode%-%subcategoryCode%-%potion_RESREF%~
    OUTER_TEXT_SPRINT ~state_prefix_subcategory~    ~%categoryCode%-%subcategoryCode%~
    OUTER_TEXT_SPRINT ~state_prefix_category~       ~%categoryCode%~

    OUTER_TEXT_SPRINT ~state_markup~
        ~~~~~
    IF ~~
    THEN BEGIN ~bz-potion-%state_prefix_recipe%-valid~
        SAY ~%prompt%~ // ~You analyze the formula and prepare to brew %potion_name%.~
            //already gated other conditions prior
            IF ~PartyGoldGT(%cost_gold_gt%)
RandomNumLT(100, %bz_potion_failure_bounds_success%)~   //created successfully
            THEN
                REPLY ~%brew_transition_go%~   //~Brew %potion_name% [spend %cost_gold% gold; %readable_time%; yield %quantity% vials]~
                DO ~
TakePartyGold(%cost_gold%)
DestroyGold(%cost_gold%)
AdvanceTime(%cost_time_engine%)
DisplayString(Myself, %elapsed_strref%)
PlaySound("BZBREW")
GiveItemCreate("%potion_RESREF%", Myself, %quantity%, 0, 0)
ClearAllActions()
StartCutSceneMode()
StartCutScene("BZCTPOTN")~
                EXIT
            IF ~PartyGoldGT(%cost_gold_gt%)
RandomNumGT(100, %bz_potion_failure_bounds_cursed%)~    //failure, create cursed potion
            THEN
                REPLY ~%brew_transition_go%~   //~Brew %potion_name% [spend %cost_gold% gold; %readable_time%; yield %quantity% vials]~
                DO ~
TakePartyGold(%cost_gold%)
DestroyGold(%cost_gold%)
AdvanceTime(%cost_time_engine%)
DisplayString(Myself, %elapsed_strref%)
PlaySound("BZBREW")
CreateCreature("BZCPOTN", [-1.-1], S)
ActionOverride("BZ_CursedScrollGiver", GivePartyAllEquipment())
ActionOverride("BZ_CursedScrollGiver", DestroySelf())
ClearAllActions()
StartCutSceneMode()
StartCutScene("BZCTPOTN")~
                EXIT

            IF ~~
            THEN REPLY @30030 // ~Pick another formula.~
                GOTO ~bz-potion-%state_prefix_potion%~
            IF ~~
            THEN REPLY @30022 // ~Pick another sub-category of potion.~
                GOTO ~bz-potion-%state_prefix_subcategory%~
            IF ~~
            THEN REPLY @30024 // ~Pick another potion.~
                GOTO ~bz-potion-%state_prefix_category%~
            IF ~~
            THEN REPLY @30025 // ~Pick another type of potion.~
                GOTO ~bz-potion-main_menu~
            IF ~~
            THEN REPLY @30020 //Pack up your alchemy station
                EXIT
    END

    IF ~~
    THEN BEGIN ~bz-potion-%state_prefix_recipe%-insufficient_gold~
        SAY @30042 // ~You have insufficient gold to brew this potion.~
            IF ~~
            THEN REPLY @30030 // ~Pick another formula.~
                GOTO ~bz-potion-%state_prefix_potion%~
            IF ~~
            THEN REPLY @30022 // ~Pick another sub-category of potion.~
                GOTO ~bz-potion-%state_prefix_subcategory%~
            IF ~~
            THEN REPLY @30024 // ~Pick another potion.~
                GOTO ~bz-potion-%state_prefix_category%~
            IF ~~
            THEN REPLY @30025 // ~Pick another type of potion.~
                GOTO ~bz-potion-main_menu~
            IF ~~
            THEN REPLY @30020 //Pack up your alchemy station
                EXIT
    END

    IF ~~
    THEN BEGIN ~bz-potion-%state_prefix_recipe%-insufficient_level~
        SAY @30047 // ~You are of insufficient level for this formula.~
            IF ~~
            THEN REPLY @30030 // ~Pick another formula.~
                GOTO ~bz-potion-%state_prefix_potion%~
            IF ~~
            THEN REPLY @30022 // ~Pick another sub-category of potion.~
                GOTO ~bz-potion-%state_prefix_subcategory%~
            IF ~~
            THEN REPLY @30024 // ~Pick another potion.~
                GOTO ~bz-potion-%state_prefix_category%~
            IF ~~
            THEN REPLY @30025 // ~Pick another type of potion.~
                GOTO ~bz-potion-main_menu~
            IF ~~
            THEN REPLY @30020 //Pack up your alchemy station
                EXIT
    END

    IF ~~
    THEN BEGIN ~bz-potion-%state_prefix_recipe%-not_memorized~
        SAY @30048 // ~You do not have the spells for this formula memorized.~
            IF ~~
            THEN REPLY @30030 // ~Pick another formula.~
                GOTO ~bz-potion-%state_prefix_potion%~
            IF ~~
            THEN REPLY @30022 // ~Pick another sub-category of potion.~
                GOTO ~bz-potion-%state_prefix_subcategory%~
            IF ~~
            THEN REPLY @30024 // ~Pick another potion.~
                GOTO ~bz-potion-%state_prefix_category%~
            IF ~~
            THEN REPLY @30025 // ~Pick another type of potion.~
                GOTO ~bz-potion-main_menu~
            IF ~~
            THEN REPLY @30020 //Pack up your alchemy station
                EXIT
    END
        ~~~~~

    /********************************************
    *   END: Build potion states for formulae   *
    ********************************************/
END // function definition
